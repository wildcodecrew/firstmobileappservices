{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/head/Desktop/\\u0421\\u0435\\u0440\\u0435\\u0433\\u0430 \\u041C\\u043B\\u0430\\u0434\\u0448\\u0438\\u0439/ITProjects/firstmobileappservices/client/components/CardItem.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nexport var CardItem = function (_Component) {\n  _inherits(CardItem, _Component);\n\n  var _super = _createSuper(CardItem);\n\n  function CardItem() {\n    var _this;\n\n    _classCallCheck(this, CardItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.render = function () {\n      var _this$props = _this.props,\n          onPress = _this$props.onPress,\n          card = _this$props.card;\n      var img;\n      var styles = StyleSheet.create({\n        container: {\n          flex: 1\n        },\n        item: {\n          backgroundColor: '#c2e3ff',\n          padding: 20,\n          height: 10,\n          marginVertical: 8,\n          marginHorizontal: 16\n        },\n        title: {\n          fontSize: 12\n        },\n        thumbnail: {\n          width: 100,\n          height: 100\n        }\n      });\n      if (card.img != null) img = card.img;else img = require(\"../assets/images/noimage.png\");\n      return React.createElement(TouchableOpacity, {\n        onPress: onPress,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.item,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }, card.title), React.createElement(Image, {\n        style: styles.thumbnail,\n        source: img,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      })));\n    };\n\n    return _this;\n  }\n\n  return CardItem;\n}(Component);","map":{"version":3,"sources":["/home/head/Desktop/Серега Младший/ITProjects/firstmobileappservices/client/components/CardItem.js"],"names":["React","Component","CardItem","render","props","onPress","card","img","styles","StyleSheet","create","container","flex","item","backgroundColor","padding","height","marginVertical","marginHorizontal","title","fontSize","thumbnail","width","require"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;;AAEA,WAAaC,QAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,UAEIC,MAFJ,GAEa,YAAM;AACX,wBAAwB,MAAKC,KAA7B;AAAA,UAAOC,OAAP,eAAOA,OAAP;AAAA,UAAgBC,IAAhB,eAAgBA,IAAhB;AACA,UAAIC,GAAJ;AAEA,UAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,QAAAA,SAAS,EAAE;AACPC,UAAAA,IAAI,EAAE;AADC,SADkB;AAI7BC,QAAAA,IAAI,EAAE;AACFC,UAAAA,eAAe,EAAE,SADf;AAEFC,UAAAA,OAAO,EAAE,EAFP;AAGFC,UAAAA,MAAM,EAAE,EAHN;AAIFC,UAAAA,cAAc,EAAE,CAJd;AAKFC,UAAAA,gBAAgB,EAAE;AALhB,SAJuB;AAW7BC,QAAAA,KAAK,EAAE;AACHC,UAAAA,QAAQ,EAAE;AADP,SAXsB;AAc7BC,QAAAA,SAAS,EAAE;AACPC,UAAAA,KAAK,EAAE,GADA;AAEPN,UAAAA,MAAM,EAAE;AAFD;AAdkB,OAAlB,CAAf;AAoBA,UAAGV,IAAI,CAACC,GAAL,IAAY,IAAf,EAAqBA,GAAG,GAAGD,IAAI,CAACC,GAAX,CAArB,KACKA,GAAG,GAAGgB,OAAO,gCAAb;AAEL,aACI,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAElB,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEG,MAAM,CAACK,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOP,IAAI,CAACa,KAAZ,CADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEX,MAAM,CAACa,SAArB;AAAgC,QAAA,MAAM,EAAEd,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADA,CADJ;AAQH,KArCL;;AAAA;AAAA;;AAAA;AAAA,EAA8BN,SAA9B","sourcesContent":["import React, {Component} from 'react';\r\nimport {StyleSheet, TouchableOpacity, Image, Text, View} from 'react-native';\r\nexport class CardItem extends Component {\r\n\r\n    render = () => {\r\n        const {onPress, card} = this.props;\r\n        let img;\r\n\r\n        const styles = StyleSheet.create({\r\n            container: {\r\n                flex: 1,\r\n            },\r\n            item: {\r\n                backgroundColor: '#c2e3ff',\r\n                padding: 20,\r\n                height: 10,\r\n                marginVertical: 8,\r\n                marginHorizontal: 16,\r\n            },\r\n            title: {\r\n                fontSize: 12,\r\n            },\r\n            thumbnail: {\r\n                width: 100,\r\n                height: 100,\r\n            }\r\n        })\r\n\r\n        if(card.img != null) img = card.img;\r\n        else img = require('../assets/images/noimage.png');\r\n        \r\n        return (\r\n            <TouchableOpacity onPress={onPress}>\r\n            <View style={styles.item}>\r\n                <Text>{card.title}</Text>\r\n                <Image style={styles.thumbnail} source={img} />\r\n            </View>\r\n            </TouchableOpacity>\r\n        );\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}